# --- Builder stage ---
FROM node:20-alpine AS builder

# Enable corepack & pnpN corepack enable && corepack prepare pnpm@latest --activate

WORKDIR /app

COPY package.json pnpm-lock.yaml ./

ENV PNPM_STORE_DIR=/root/.pnpm-store

RUN corepack enable && pnpm install --frozen-lockfile --force
# Always use the same pnpm store inside container
RUN pnpm config set store-dir /root/.pnpm-store --global

# Copy package manifests first (better caching)COPY package.json pnpm-lock.yaml* ./

# Install dependencies
RUN pnpm install --frozen-lockfile --force

# Copy rest of the project
COPY . .

# Ensure TS dependencies exist (prevent Next.js auto-install failure)
RUN pnpm install -D @types/react @types/node

# Build the Next.js app
RUN pnpm build

# --- Runtime stage ---
FROM node:20-alpine AS runner

WORKDIR /app
ENV NODE_ENV=production

# Copy only necessary files from builder
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/node_modules ./node_modules

EXPOSE 3000
CMD ["pnpm", "start"]

